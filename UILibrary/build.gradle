apply plugin: 'com.android.library'

def versionJar = "1.0.3"
def suffix = "alp"
def libraryId = "com.joey.uilib"
def libraryName = "UILibrary"

android {
    compileSdkVersion 23
    buildToolsVersion '26.0.2'
    useLibrary 'org.apache.http.legacy'
    defaultConfig {
//        applicationId "com.joey"
        minSdkVersion 11
        targetSdkVersion 23
        versionCode 1
        versionName versionJar
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.3.0'
    compile 'com.android.support:design:23.3.0'
}


task makeJar(type: Copy) {

    def fileName = libraryId + "." + suffix + "_v" + versionJar

    //删除存在的
    delete 'build/libs/*'
    //设置拷贝的文件路径
    from('build/intermediates/bundles/release/')
    //打进jar包后的文件目录
    into('build/libs/')
    //将classes.jar放入build/libs/目录下
    //include ,exclude参数来设置过滤
    exclude("libs/*")
    //（我们只关心classes.jar这个文件）
    include('classes.jar')
    //重命名
    rename('classes.jar', fileName + '.jar')

    from('build/outputs/aar/')

    into('build/libs/')

    include(libraryName + '-release.aar')
    //重命名
    rename(libraryName + '-release.aar', fileName + '.aar')


}

makeJar.dependsOn(build)
